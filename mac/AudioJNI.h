/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class uk_ac_open_audio_MacAudio */

#ifndef _Included_uk_ac_open_audio_MacAudio
#define _Included_uk_ac_open_audio_MacAudio
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingInit
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_open_audio_MacAudio_recordingInit
  (JNIEnv *, jclass);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingGetRate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_open_audio_MacAudio_recordingGetRate
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingIsStereo
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_uk_ac_open_audio_MacAudio_recordingIsStereo
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingStart
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_recordingStart
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingGetData
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_uk_ac_open_audio_MacAudio_recordingGetData
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingStop
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_recordingStop
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingReset
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_recordingReset
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    recordingClose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_recordingClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackInit
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_uk_ac_open_audio_MacAudio_playbackInit
  (JNIEnv *, jclass);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackGetRate
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_open_audio_MacAudio_playbackGetRate
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackIsStereo
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_uk_ac_open_audio_MacAudio_playbackIsStereo
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackStart
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_playbackStart
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackAddData
 * Signature: (I[B)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_playbackAddData
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackGetUnplayedSize
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_uk_ac_open_audio_MacAudio_playbackGetUnplayedSize
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackStop
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_playbackStop
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackReset
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_playbackReset
  (JNIEnv *, jclass, jint);

/*
 * Class:     uk_ac_open_audio_MacAudio
 * Method:    playbackClose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_uk_ac_open_audio_MacAudio_playbackClose
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
